package multiableServerClient;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Scanner;

public class MulitableClient {
	private final String ServerAddress = "192.168.30.215";
	private final int PORT = 12345;
	private Socket clientSocket;
	private Scanner scanner;
	private InputStream input;
	private OutputStream output;
	private String userInputData;

	public MulitableClient() {
		createClientSocket();
	}

	public void createClientSocket() {
		try {
			System.out.println("=== 클라이언트 실행 ===");
			System.out.println(
					"연결 시도중... \n서버:" + ServerAddress + "<===> 클라이언트:" + InetAddress.getLocalHost().getHostAddress());
			clientSocket = new Socket(ServerAddress, PORT);
			input = clientSocket.getInputStream();
			output = clientSocket.getOutputStream();
			scanner = new Scanner(System.in);
			byte[] buffer = new byte[1024];
			int bytesRead; // 초기값 0
			while (true) {
				System.out.print("서버와 연결되었습니다. 메시지를 입력하세요 >> ");
				userInputData = scanner.nextLine();
				if (userInputData.equalsIgnoreCase("exit")) {	// 대소문자 구분없이 exit,EXIT
					break; // "exit" 입력 시 루프 종료
				}
				output.write(userInputData.getBytes());
				output.flush();

				// 서버로부터 응답 받기
				bytesRead = input.read(buffer);
				String responseData = new String(buffer, 0, bytesRead);
				System.out.println("서버로부터 받은 응답 : " + responseData);
			}
			System.out.println(clientSocket.toString()+"종료");
		} catch (UnknownHostException e) {
			System.err.println("네트워크 연결 문제입니다.");
		} catch (IOException e) {
			System.err.println("소켓 관련 문제입니다.");
		} finally {
			try {
				if (output != null)
					output.close();
				if (input != null)
					input.close();
				if (scanner != null)
					scanner.close();
				if (clientSocket != null)
					clientSocket.close();
			} catch (IOException e) {
				System.err.println("소켓에러 ) " + e.getMessage());
			}
			System.out.println("클라이언트 종료");
		}
	}


	public static void main(String[] args) {
		new MulitableClient();
	}
}
