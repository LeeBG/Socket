<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
	PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="Dept">
	<typeAlias alias="dept" type="kr.co.s3i.sr1.hr.dept.model.Dept" />
	<typeAlias alias="deptTree" type="kr.co.s3i.sr1.hr.dept.model.DeptTree" />

	<select id="selectDept" resultClass="dept">
		/** selectDept */
		SELECT *
		  FROM c_dept_mgt
		 WHERE dept_seq = #dept_seq#	
		   AND rst_seq = 0	
		   AND cud_cd in ('C','U')
		<isNotEmpty prepend="AND" property="mgt_yn">
			mgt_yn = #mgt_yn#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="use_yn">
			use_yn = #use_yn#
		</isNotEmpty>
	</select>

	<select id="selectDeptList" resultClass="dept">
		/** selectDeptList */
		SELECT
			*
		FROM
			c_dept_mgt
		WHERE
			rst_seq = 0
		<isNotEmpty prepend="AND" property="use_yn">
			use_yn = 'Y'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="dept_seq">
			dept_seq = #dept_seq#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="p_dept_seq">
			p_dept_seq = #p_dept_seq#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="dept_nm">
			dept_nm LIKE CONCAT('%',#dept_nm#,'%')
		</isNotEmpty>
		<isGreaterThan compareValue="0" prepend="AND" property="depth">
			depth = #depth#
		</isGreaterThan>
		<isNotEmpty prepend=" " property="orderType">
			order by `order` $orderType$
		</isNotEmpty>
	</select>

	<select id="selectPDeptList" resultClass="dept">
		/** selectPDeptList */
		SELECT
			*
		FROM
			c_dept_mgt
		WHERE
			rst_seq = 0
		AND
			cud_cd != 'D'
		AND
			p_dept_seq = #dept_seq#
	</select>

	<select id="selectDeptGroupTree" resultClass="dept">
		select 
			*		 
		from 
			c_dept_mgt
		where 
			rst_seq <![CDATA[=]]> 0
		AND
			cud_cd in ('C','U')
		order by
			dept_nm
	</select>
	
	<select id="selectChildDeptSeqList" resultClass="java.lang.String">
		SELECT 
			dept_seq
		FROM 
			c_dept_mgt
		WHERE 
			rst_seq <![CDATA[=]]> 0
		AND
			cud_cd in ('C','U')
		<isNotNull property="pDeptList" prepend="AND p_dept_seq IN ">
			<iterate open="(" close=")" conjunction="," property="pDeptList">
				#pDeptList[]#
			</iterate>
		</isNotNull>
	</select>
	
	<select id="selectChildDeptList" resultClass="deptTree">
		/* selectChildDeptList */
		SELECT 
			dept_nm as "title",
			dept_nm as "dept_nm",
			dept_seq as "key",
			dept_seq as "dept_seq", 
			depth as "depth", 
			p_dept_seq
		FROM 
			c_dept_mgt
		WHERE 
			rst_seq <![CDATA[=]]> 0
		AND
			cud_cd in ('C','U')
		<isNotNull property="pDeptList" prepend="AND p_dept_seq IN ">
			<iterate open="(" close=")" conjunction="," property="pDeptList">
				#pDeptList[].dept_seq#
			</iterate>
		</isNotNull>
		<isEqual property="orderType" compareValue="orders">
			ORDER BY `order`
		</isEqual>
	</select>

	<select id="selectDeptForGroupByList" resultClass="deptTree">
		/* selectDeptForGroupByList */
		SELECT
			dept_nm as "title",
			dept_nm as "dept_nm",
			dept_seq as "key",
			dept_seq as "dept_seq", 
			depth as "depth", 
			p_dept_seq
		FROM
			c_dept_mgt
		WHERE
			p_dept_seq <![CDATA[=]]> #p_dept_seq#	
		AND
			rst_seq <![CDATA[=]]> 0	
		AND
			cud_cd in ('C','U')
		<isNotEmpty prepend="AND" property="mgt_yn">
			mgt_yn = #mgt_yn#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="use_yn">
			use_yn = #use_yn#
		</isNotEmpty>
		<isEqual property="orderType" compareValue="orders">
			ORDER BY `order`
		</isEqual>
		<isEqual property="orderType" compareValue="common">
			ORDER BY dept_seq
		</isEqual>
	</select>
	
	<select id="selectMaxDepth" resultClass="java.lang.Integer">
		/* selectMaxDepth */
		SELECT IFNULL( MAX(depth), 0 )
		FROM c_dept_mgt 
		WHERE rst_seq = 0
			AND cud_cd != 'D'
	</select>
	
	<select id="selectDeptForGroup" resultClass="dept">
		SELECT *
		FROM
			c_dept_mgt
		WHERE
			p_dept_seq <![CDATA[=]]> #p_dept_seq#	
		AND
			rst_seq <![CDATA[=]]> 0	
		AND
			cud_cd in ('C','U')
		<isNotEmpty prepend="AND" property="mgt_yn">
			mgt_yn = #mgt_yn#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="use_yn">
			use_yn = #use_yn#
		</isNotEmpty>
		order by
			dept_seq	
	</select>

	<insert id="insertDept">
		/** insertDept */
		INSERT INTO c_dept_mgt (
			RST_SEQ,
			CUD_CD,
			DEPT_SEQ,
			DEPT_NM,
			P_DEPT_SEQ,
			DEPTH,
			<isNotNull property="order">
			`ORDER`,
			</isNotNull>
			USE_YN,
			A_POL_SEQ,
			L_POL_SEQ,
			F_POL_SEQ,
			FP_POL_SEQ,
			<isNotNull property="custom_add_yn">
			CUSTOM_ADD_YN,
			</isNotNull>
			CRT_ID,
			CRT_DATE,
			MOD_ID,
			MOD_DATE,
			NOTE,
			CHILD_YN
		) VALUES (
			#rst_seq#,
			#cud_cd#,
			#dept_seq#,
			#dept_nm#,
			#p_dept_seq#,
			#depth#,
			<isNotNull property="order">
			#order#,
			</isNotNull>
			#use_yn#,
			#a_pol_seq#,
			#l_pol_seq#,
			#f_pol_seq#,
			#fp_pol_seq#,
			<isNotNull property="custom_add_yn">
			#custom_add_yn#,
			</isNotNull>
			#crt_id#,
			NOW(),
			#mod_id#,
			NOW(),
			#note#,
			'Y'
		)		
	</insert>

	<delete id="deleteDept">
		/** deleteDept */
		DELETE
		FROM c_dept_mgt
		WHERE dept_seq = #dept_seq#
	</delete>

	<update id="updateDeptRSTSequence">
		UPDATE 
			c_dept_mgt
		<dynamic prepend="SET">
			RST_SEQ <![CDATA[=]]>
				(SELECT
					*
				FROM
					(
						SELECT
							MAX(RST_SEQ)+1
						FROM
							c_dept_mgt
						WHERE
							<isNotEmpty prepend="AND" property="dept_seq">
								dept_seq <![CDATA[=]]> #dept_seq#
							</isNotEmpty>
					)
				AS RST_SEQ),
			mod_date = NOW()
		</dynamic>
		WHERE 
			dept_seq = #dept_seq#
		AND
			RST_SEQ <![CDATA[=]]> 0
	</update>
	
	<update id="updateAdminAuditDept">
		update admin_audit a set button_yn = 'N'
			WHERE a.log_code = 'DEPT_MGT'
			    AND EXISTS ( SELECT 1 FROM c_dept_mgt b
						        WHERE b.dept_seq = #dept_seq#
						           AND a.table_seq = b.seq
						           AND a.log_text LIKE CONCAT('%',#dept_seq#,'%') )
	</update>

	<update id="updateDeptChildYN">
		UPDATE 
			c_dept_mgt
		SET 
			child_yn = 'Y',
			mod_date = NOW()
		WHERE 
			dept_seq = #dept_seq#
	</update>
	
	<select id="selectSeq" resultClass="Integer">
		SELECT
			seq
		FROM
			c_dept_mgt
		WHERE
			dept_seq = #dept_seq#	
			AND rst_seq = 0
	</select>
	
	
	<!-- 인사디비동기화시 부서가존재하지않을때 인서트 -->
	<insert id="insertHrdbDepartment">
		/** insertDept */
		INSERT INTO c_dept_mgt (
			RST_SEQ,
			CUD_CD,
			DEPT_SEQ,
			DEPT_NM,
			P_DEPT_SEQ,
			DEPTH,
			USE_YN,
			CRT_ID,
			CRT_DATE,
			MOD_ID,
			MOD_DATE,
			CHILD_YN
		) VALUES (
			0,
			'C',
			#dept_seq#,
			#dept_nm#,
			#p_dept_seq#,
			#depth#,
			#use_yn#,
			#crt_id#,
			NOW(),
			#mod_id#,
			NOW(),
			'Y'
		)		
	</insert>
	
	<!-- 인사디비동기화시 부서 업데이트 -->
		<update id="updateHrdbDepartment">
		UPDATE c_dept_mgt
		SET
			dept_nm = #dept_nm#
   		  , p_dept_seq = #p_dept_seq#
   		  , depth = #depth#
   		  , `order` = #order#
		  , mod_id = 'monitor'
		  , mod_date = now()
		WHERE
			rst_seq =0
		AND
			dept_seq = #dept_seq#		
	</update>
	
	<select id="selectAllTRSDeptList" resultClass="dept"> 
		/* selectAllTRSDeptList */
		SELECT *
		FROM c_dept_mgt
		WHERE rst_seq = 0
			AND cud_cd != 'D'
			AND dept_seq LIKE 'I%'
	</select>
	
	<select id="getParentDeptByDeptSeq" resultClass="dept"> 
		SELECT *
		FROM c_dept_mgt
		WHERE 
		rst_seq = 0
		AND cud_cd != 'D'
		AND dept_seq = (
			SELECT p_dept_seq FROM c_dept_mgt 
			WHERE dept_seq = #dept_seq# and rst_seq=0 and cud_cd != 'D' limit 1
		)
	</select>
	
	<select id="selectPdeptSeq" resultClass="String">
		SELECT 
			p_dept_seq 
		FROM 
			c_dept_mgt 
		WHERE 
			rst_seq = 0 
		AND 
			use_yn = 'Y'
		AND
			dept_seq = #dept_seq#
	</select>
	
	<select id="selectAdminManagement" resultClass="java.lang.Integer">
		/* selectAdminManagement */
		SELECT 
			IFNULL( MAX(SEQ), 0 )
		FROM 
			ADMIN_MANAGEMENT
		WHERE 
			CUD_CD != 'D'
		AND 
			ADMIN_ID = #users_id#
		AND 
			TYPE = #manage_type#
	</select>
	
	<select id="findDeptGroupListJson" resultClass="usersForm">
		/* findDeptGroupListJson */
		SELECT
			a.*, b.dept_nm
		FROM
			ADMIN_MANAGEMENT as a
			JOIN c_dept_mgt as b on a.manage_value = b.dept_seq AND b.rst_seq = '0'
		WHERE
			a.ADMIN_ID = #users_id#
		AND
			TYPE = #manage_type#
	</select>
	
	<insert id="insertDeptGroup">
		/* insertDeptGroup */
		INSERT INTO ADMIN_MANAGEMENT (
		CUD_CD,
		TYPE,
		MANAGE_VALUE,
		DOWN_DEPT_YN,
		ADMIN_ID,
		CRT_DATE,
		MOD_DATE
		) VALUES (
		'C',
		#manage_type#,
		#manage_value#,
		#down_dept_yn#,
		#users_id#,
		NOW(),
		NOW()
		)
	</insert>
	
	<delete id="deleteDeptGroup">
		/* deleteAdminManagement */
		DELETE
		FROM 
			admin_management
		WHERE 
			ADMIN_ID = #users_id#
		AND 
			TYPE = #manage_type#
	</delete>
	
	<delete id="deleteDeptGroupValue">
		/* deleteDeptGroupValue */
		DELETE
		FROM 
			admin_management
		WHERE 
			manage_value = #dept_seq#
	</delete>
</sqlMap> 