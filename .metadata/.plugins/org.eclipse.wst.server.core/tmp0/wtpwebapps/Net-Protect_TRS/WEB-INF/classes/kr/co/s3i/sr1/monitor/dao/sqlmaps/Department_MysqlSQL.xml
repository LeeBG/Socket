<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
	PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
	"http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="Department">
	<typeAlias alias="Department" type="kr.co.s3i.sr1.hr.dept.model.Dept" />

	<!-- 인사디비동기화시 TRS 부서 셀렉트 -->
	<!-- 
	<select id="selectDepartmentList" parameterClass="Department" resultClass="Department">
		/** selectDeptList */
		SELECT
			*
		FROM
			c_dept_mgt
		WHERE
			rst_seq = 0
		<isNotEmpty prepend="AND" property="use_yn">
			use_yn = 'Y'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="dept_seq">
			dept_seq = #dept_seq#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="p_dept_seq">
			p_dept_seq = #p_dept_seq#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="dept_nm">
			dept_nm LIKE CONCAT('%',#dept_nm#,'%')
		</isNotEmpty>
		<isGreaterThan compareValue="0" prepend="AND" property="depth">
			depth = #depth#
		</isGreaterThan>
		<isNotEmpty prepend=" " property="orderType">
			order by `order` $orderType$
		</isNotEmpty>
	</select> -->

	<!-- 인사디비동기화시 부서가존재하지않을때 인서트 -->
	<insert id="insertDepartment">
		/** insertDept */
		INSERT INTO c_dept_mgt (
			RST_SEQ,
			CUD_CD,
			DEPT_SEQ,
			DEPT_NM,
			P_DEPT_SEQ,
			DEPTH,
			USE_YN,
			CRT_ID,
			CRT_DATE,
			MOD_ID,
			MOD_DATE,
			<isNotNull property="order">
			`ORDER`,
			</isNotNull>
			<isNotNull property="a_pol_seq">
			A_POL_SEQ,
			</isNotNull>
			<isNotNull property="f_pol_seq">
			F_POL_SEQ,
			</isNotNull>
			<isNotNull property="l_pol_seq">
			L_POL_SEQ,
			</isNotNull>
			<isNotNull property="fp_pol_seq">
			FP_POL_SEQ,
			</isNotNull>
			CHILD_YN
		) VALUES (
			0,
			'C',
			#dept_seq#,
			#dept_nm#,
			#p_dept_seq#,
			#depth#,
			#use_yn#,
			#crt_id#,
			NOW(),
			#mod_id#,
			NOW(),
			<isNotNull property="order">
			#order#,
			</isNotNull>
			<isNotNull property="a_pol_seq">
			#a_pol_seq#,
			</isNotNull>
			<isNotNull property="f_pol_seq">
			#f_pol_seq#,
			</isNotNull>
			<isNotNull property="l_pol_seq">
			#l_pol_seq#,
			</isNotNull>
			<isNotNull property="fp_pol_seq">
			#fp_pol_seq#,
			</isNotNull>
			'Y'
		)
	</insert>
	
	<!-- 인사디비동기화시 부서 업데이트 -->
		<update id="updateDepartment">
		UPDATE c_dept_mgt
		SET
			dept_nm = #dept_nm#,
			p_dept_seq = #p_dept_seq#,
			depth = #depth#
			<isNotEmpty prepend="," property="order">
			`order` = #order#,
			</isNotEmpty>
			mod_id = #mod_id#,
			child_yn = #child_yn#,
			note = #note#,
			mod_date = now()
			<isNotEmpty prepend="," property="use_yn">
			use_yn = #use_yn#
			</isNotEmpty>
			<isNotEmpty prepend="," property="custom_add_yn">
			custom_add_yn = #custom_add_yn#
			</isNotEmpty>
			<isNotEmpty prepend="," property="cud_cd">
			cud_cd = #cud_cd#
			</isNotEmpty>
			<isNotEmpty prepend="," property="rst_seq">
			rst_seq = #rst_seq#
			</isNotEmpty>
		WHERE
			rst_seq =0
		AND
			dept_seq = #dept_seq#
	</update>

	<select id="selectExsitDepartment" parameterClass="Department" resultClass="Department">
		SELECT
			dept_seq,
			dept_id,
			dept_nm,
			p_dept_seq,
			depth,
			child_yn,
			reg_date,
			use_yn,
			crt_time,
			crtr_id,
			mod_time,
			modr_id
		FROM
			dept
		WHERE
			1=1
		<isNotEmpty prepend="AND" property="dept_id">
			dept_id = #dept_id#
		</isNotEmpty>
		<isGreaterThan compareValue="0" prepend="AND" property="dept_seq">
			dept_seq = #dept_seq#
		</isGreaterThan>
	</select>

	<select id="selectDepartmentTreeList" parameterClass="Department" resultClass="Department">
		SELECT
			a.dept_seq,
			a.dept_id,
			a.dept_nm,
			a.p_dept_seq,
			a.depth,
			a.child_yn,
			a.reg_date,
			a.use_yn,
			a.crt_time,
			a.crtr_id,
			a.mod_time,
			a.modr_id
		FROM (
			SELECT
				d.dept_seq,
				d.dept_seq as dept_id,
				d.dept_nm AS dept_nm,
				d.p_dept_seq,
				func.level as depth,
				d.child_yn,
				d.reg_date,
				d.use_yn,
				d.crt_time,
				d.crtr_id,
				d.mod_time,
				d.modr_id
			FROM
				(
				SELECT
					dept_connect_by_p_dept_seq() AS dept_seq,
					@level AS level
					FROM
						(
						SELECT
							@start_with :=  #dept_seq#,
							@dept_seq := @start_with,
							@level := 0
						) vars, Dept
					WHERE
						@dept_seq IS NOT NULL
				) func
			JOIN
				Dept d 
			ON
				func.dept_seq = d.dept_seq
		) A
		WHERE 1=1
		<isGreaterThan compareValue="0" prepend="AND" property="depth">
			depth <![CDATA[<]]> #depth#
		</isGreaterThan>
	</select>

	<select id="selectDepartmentChildCount" resultClass="Integer">
		SELECT
			COUNT(dept_id)
		FROM
			dept
		WHERE
			use_yn = 'Y'
		AND
			p_dept_seq = #p_dept_seq#
	</select>

	<select id="selectParentDeptTreeList" resultClass="Department">
		SELECT
			_dept_seq AS  dept_seq,
			(SELECT
				dept_nm
			FROM
				dept
			WHERE
				dept_seq = _dept_seq
			) AS dept_nm
		FROM
			(
			SELECT
				@r AS _dept_seq,
				(
				SELECT	@r := p_dept_seq
				FROM	dept
				WHERE	dept_seq = _dept_seq
				) AS parent,
				@l := @l + 1 AS level
			FROM
				(
				SELECT  @r := #dept_seq#,
				@l := 0,
				@cl := 0
				) vars,
				dept h
			WHERE
				@r <![CDATA[<>]]> 0
			ORDER BY
				level DESC
			) qi
		WHERE
			_dept_seq <![CDATA[<>]]> 1000000000000
	</select>

	<select id="selectSelfApprovalDeptList" resultClass="Department">
		SELECT 
			distinct u.dept_seq, d.dept_nm
		FROM
			users u, dept d
		WHERE
			u.dept_seq = d.dept_seq
		AND
			d.dept_seq NOT IN (SELECT 
									DISTINCT dept_seq 
								FROM
									users 
								WHERE 
									approver_type in (1,2)
								)
	</select>

	<!-- <insert id="insertDepartment">
		INSERT INTO dept (
			dept_seq,
			dept_id,
			dept_nm,
			p_dept_seq,
			use_yn,
			crtr_id,
			depth,
			crt_time
		) VALUES (
			#dept_seq#,
			#dept_id#,
			#dept_nm#,
			#p_dept_seq#,
			'Y',
			#crtr_id#,
			#depth#,
			now()
		)
	</insert> -->

	<update id="updateDepartmentChildYN">
		UPDATE dept
		SET
			child_yn = #child_yn#
		WHERE
			dept_seq = #dept_seq#
	</update>
	
	<select id="selectDept" resultClass="Department">
		/** selectDept */
		SELECT *
		  FROM c_dept_mgt
		 WHERE dept_seq = #dept_seq#	
		   AND rst_seq = 0	
		   AND cud_cd in ('C','U')
		<isNotEmpty prepend="AND" property="mgt_yn">
			mgt_yn = #mgt_yn#;
		</isNotEmpty>
	</select>
	
	<select id="selectDeptList" resultClass="Department">
		/** selectDeptList */
		SELECT
			*
		FROM
			c_dept_mgt
		WHERE
			rst_seq = 0
		<isNotEmpty prepend="AND" property="use_yn">
			use_yn = 'Y'
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="dept_seq">
			dept_seq = #dept_seq#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="p_dept_seq">
			p_dept_seq = #p_dept_seq#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="dept_nm">
			dept_nm LIKE CONCAT('%',#dept_nm#,'%')
		</isNotEmpty>
		<isGreaterThan compareValue="0" prepend="AND" property="depth">
			depth = #depth#
		</isGreaterThan>
		<isNotEmpty prepend=" " property="orderType">
			order by `order` $orderType$
		</isNotEmpty>
	</select>

	<update id="updateDeptDepthDown">
		UPDATE 
			c_dept_mgt
		set
			depth = depth -1
		where
			rst_seq = '0';
	</update>

	<delete id="deleteDepartment">
		/** deleteDepartment */
		DELETE
		FROM c_dept_mgt
		WHERE dept_seq = #dept_seq#
	</delete>
</sqlMap>
