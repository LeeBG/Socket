<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
	PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="TotalStatistics">
	<typeAlias alias="StaticsGraphs" type="kr.co.s3i.sr1.trsMonitor.totalStatistics.model.StaticsGraph" />
	<typeAlias alias="StaticsDetails" type="kr.co.s3i.sr1.trsMonitor.totalStatistics.model.StaticsDetail" />
		
	<sql id="fromStatics">
		<isEqual property="date_flag_modify" compareValue="D">
			m_statics_hour a
		</isEqual>
		<isEqual property="date_flag_modify" compareValue="M">
			m_statics_day a
		</isEqual>
		<isEqual property="date_flag_modify" compareValue="Y">
			m_statics_day a
		</isEqual>
	</sql>
	
	<sql id="from_writeTime">
		<isEqual property="date_flag" compareValue="D">
			SUBSTR(write_time, 9, 2) AS write_time
		</isEqual>
		<isEqual property="date_flag" compareValue="M">
			SUBSTR(write_time, 5, 4) AS write_time
		</isEqual>
		<isEqual property="date_flag" compareValue="Y">
			SUBSTR(write_time, 5, 2) AS write_time
		</isEqual>
		<isEqual property="date_flag" compareValue="P">
			SUBSTR(write_time, 5, 4) AS write_time
		</isEqual>
	</sql>
	
	<sql id="include_adminManagement">
		<isEqual prepend="AND" property="isAdminManageUse" compareValue="true">
			EXISTS(SELECT 1 FROM vw_manage_user_list_d b, (SELECT @users_id:=#admin_id#) c WHERE a.users_id = b.users_id)
		</isEqual>
	</sql>
	
	<sql id="include_todaySearch_graph">
		<isEqual property="search_today_yn" compareValue="T">
			UNION ALL
			SELECT SUBSTR(write_time, 5, 4) AS write_time, send_success_count, login_cnt, send_fail_count, send_size, filter_count, forgery_count, protect_count, suspicious_count, infected_count, scan_fail_count
			FROM m_statics_hour a
			where 
			write_time BETWEEN #startTodayDate# AND #endTodayDate#
			<include refid="include_adminManagement"/>
		</isEqual>
	</sql>
	
	<sql id="include_todaySearch_table">
		<isEqual property="search_today_yn" compareValue="T">
			UNION ALL
			SELECT
			SUBSTR(write_time, 5, 4) AS write_time,
			IF(io_cd = 'I', send_success_count, 0) AS send_success_count_i,
			IF(io_cd = 'O', send_success_count, 0) AS send_success_count_o,
			IF(io_cd = 'I', send_size, 0) AS send_size_i,
			IF(io_cd = 'O', send_size, 0) AS send_size_o,
			IF(io_cd = 'I', login_cnt, 0) AS login_cnt_i,
			IF(io_cd = 'O', login_cnt, 0) AS login_cnt_o,
			IF(io_cd = 'I', filter_count + forgery_count + protect_count + suspicious_count + infected_count + scan_fail_count, 0) AS block_count_i,
			IF(io_cd = 'O', filter_count + forgery_count + protect_count + suspicious_count + infected_count + scan_fail_count, 0) AS block_count_o
		FROM
			m_statics_hour a
		WHERE
			write_time BETWEEN #startTodayDate# AND #endTodayDate#
			<include refid="include_adminManagement"/>
		</isEqual>
	</sql>
	
	<select id="selectGraph" resultClass="StaticsGraphs">
		/* selectGraph */
		SELECT 
			write_time, 
			SUM(send_success_count) AS send_success_count, 
			SUM(send_size) AS send_size,
			SUM(login_cnt) AS login_cnt,
			SUM(filter_count + forgery_count + protect_count + suspicious_count + infected_count + scan_fail_count) AS block_count
		FROM
			(SELECT <include refid="from_writeTime"/>, send_success_count, login_cnt, send_fail_count, send_size, filter_count, forgery_count, protect_count, suspicious_count, infected_count, scan_fail_count
			FROM <include refid="fromStatics"/>
			where 
			write_time BETWEEN #startDate# AND #endDate#
			<include refid="include_adminManagement"/>
			<include refid="include_todaySearch_graph"/>
			) a
		GROUP BY write_time
	</select>

	<select id="selectTableData" resultClass="StaticsDetails">
		/* selectTableData */
		SELECT
			IFNULL(write_time,99999999999999) AS write_time,
			send_success_count_i,
			send_success_count_o,
			IFNULL(send_success_count_i + send_success_count_o,0) AS send_success_count_total,
			send_size_i,
			send_size_o,
			IFNULL(send_size_i + send_size_o,0) AS send_size_total,
			login_cnt_i,
			login_cnt_o,
			IFNULL(login_cnt_i + login_cnt_o,0) AS login_cnt_total,
			block_count_i,
			block_count_o,
			IFNULL(block_count_i + block_count_o,0) AS block_count_total
		FROM
		(
		SELECT
			write_time,
			SUM(send_success_count_i) AS send_success_count_i,
			SUM(send_success_count_o) AS send_success_count_o,
			SUM(send_size_i) AS send_size_i,
			SUM(send_size_o) AS send_size_o,
			SUM(login_cnt_i) AS login_cnt_i,
			SUM(login_cnt_o) AS login_cnt_o,
			SUM(block_count_i) AS block_count_i,
			SUM(block_count_o) AS block_count_o
		FROM
		(
		SELECT
			<include refid="from_writeTime"/>,
			IF(io_cd = 'I', send_success_count, 0) AS send_success_count_i,
			IF(io_cd = 'O', send_success_count, 0) AS send_success_count_o,
			IF(io_cd = 'I', send_size, 0) AS send_size_i,
			IF(io_cd = 'O', send_size, 0) AS send_size_o,
			IF(io_cd = 'I', login_cnt, 0) AS login_cnt_i,
			IF(io_cd = 'O', login_cnt, 0) AS login_cnt_o,
			IF(io_cd = 'I', filter_count + forgery_count + protect_count + suspicious_count + infected_count + scan_fail_count, 0) AS block_count_i,
			IF(io_cd = 'O', filter_count + forgery_count + protect_count + suspicious_count + infected_count + scan_fail_count, 0) AS block_count_o
		FROM
			<include refid="fromStatics"/>
		WHERE
			write_time BETWEEN #startDate# AND #endDate#
			<include refid="include_adminManagement"/>
			<include refid="include_todaySearch_table"/>
			) a  GROUP BY write_time with rollup
			)  b ORDER BY $sidx$ $sord$, write_time $sord$
	</select>
</sqlMap>