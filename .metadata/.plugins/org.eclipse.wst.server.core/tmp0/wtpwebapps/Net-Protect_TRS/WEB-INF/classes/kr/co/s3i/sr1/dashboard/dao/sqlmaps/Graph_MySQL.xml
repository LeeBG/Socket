<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
	PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="Graph">
	<typeAlias alias="StaticsGraph" type="kr.co.s3i.sr1.dashboard.model.StaticsGraph" />
	<typeAlias alias="StaticsDetail" type="kr.co.s3i.sr1.dashboard.model.StaticsDetail" />
	
	<sql id="fromStatics">
		<isEqual property="date_flag" compareValue="D">
			m_statics_hour
		</isEqual>
		<isEqual property="date_flag" compareValue="M">
			m_statics_day
		</isEqual>
		<isEqual property="date_flag" compareValue="Y">
			m_statics_month
		</isEqual>
	</sql>
	
	<sql id="from_writeTime">
		<isEqual property="date_flag" compareValue="D">
			substr(write_time, 9, 2) as write_time
		</isEqual>
		<isEqual property="date_flag" compareValue="M">
			substr(write_time, 5, 4) as write_time
		</isEqual>
		<isEqual property="date_flag" compareValue="Y">
			substr(write_time, 5, 2) as write_time
		</isEqual>
	</sql>
	
	<select id="selectGraph" resultClass="StaticsGraph">
		select 
			write_time, 
			sum(send_count) as send_count, 
			sum(send_size) as send_size,
			sum(login_cnt) as login_cnt,
			sum(block_count) as block_count
		from
			(SELECT <include refid="from_writeTime"/>, send_count, login_cnt, block_count, send_size
			FROM <include refid="fromStatics"/>
			where 
			write_time BETWEEN #startDate# AND #endDate#
			) a
		group by write_time
	</select>

	<select id="selectTableData" resultClass="StaticsDetail">
		select
			IFNULL(write_time,99999999999999) AS write_time,
			send_count_i,
			send_count_o,
			IFNULL(send_count_i + send_count_o,0) AS send_count_total,
			send_size_i,
			send_size_o,
			IFNULL(send_size_i + send_size_o,0) AS send_size_total,
			login_cnt_i,
			login_cnt_o,
			IFNULL(login_cnt_i + login_cnt_o,0) AS login_cnt_total,
			block_count_i,
			block_count_o,
			IFNULL(block_count_i + block_count_o,0) AS block_count_total
		from
		(
		SELECT
			write_time,
			SUM(send_count_i) AS send_count_i,
			SUM(send_count_o) AS send_count_o,
			SUM(send_size_i) AS send_size_i,
			SUM(send_size_o) AS send_size_o,
			SUM(login_cnt_i) AS login_cnt_i,
			SUM(login_cnt_o) AS login_cnt_o,  
			SUM(block_count_i) AS block_count_i,
			SUM(block_count_o) AS block_count_o
		from
		(
		SELECT
			<include refid="from_writeTime"/>,
			IF(io_cd = 'I',send_count,0) AS send_count_i,
			IF(io_cd = 'O',send_count,0) AS send_count_o,
			IF(io_cd = 'I',send_size,0) AS send_size_i,
			IF(io_cd = 'O', send_size,0) AS send_size_o,
			IF(io_cd = 'I',login_cnt,0) AS login_cnt_i,
			IF(io_cd = 'O', login_cnt,0) AS login_cnt_o,
			IF(io_cd = 'I',block_count,0) AS block_count_i,
			IF(io_cd = 'O', block_count,0) AS block_count_o
		FROM
			<include refid="fromStatics"/>
		WHERE
			write_time BETWEEN #startDate# AND #endDate#
			) a  group by write_time with rollup
			)  b order by write_time DESC
	</select>

	<select id="selectTableDataXls" resultClass="StaticsDetail">
		select
			IFNULL(write_time,99999999999999) AS write_time,
			send_count_i,
			send_count_o,
			IFNULL(send_count_i + send_count_o,0) AS send_count_total,
			send_size_i,
			send_size_o,
			IFNULL(send_size_i + send_size_o,0) AS send_size_total,
			login_cnt_i,
			login_cnt_o,
			IFNULL(login_cnt_i + login_cnt_o,0) AS login_cnt_total,
			block_count_i,
			block_count_o,
			IFNULL(block_count_i + block_count_o,0) AS block_count_total
		from
		(
		SELECT
			write_time,
			SUM(send_count_i) AS send_count_i,
			SUM(send_count_o) AS send_count_o,
			SUM(send_size_i) AS send_size_i,
			SUM(send_size_o) AS send_size_o,
			SUM(login_cnt_i) AS login_cnt_i,
			SUM(login_cnt_o) AS login_cnt_o,  
			SUM(block_count_i) AS block_count_i,
			SUM(block_count_o) AS block_count_o
		from
		(
		SELECT
			<include refid="from_writeTime"/>,
			IF(io_cd = 'I',send_count,0) AS send_count_i,
			IF(io_cd = 'O',send_count,0) AS send_count_o,
			IF(io_cd = 'I',send_size,0) AS send_size_i,
			IF(io_cd = 'O', send_size,0) AS send_size_o,
			IF(io_cd = 'I',login_cnt,0) AS login_cnt_i,
			IF(io_cd = 'O', login_cnt,0) AS login_cnt_o,
			IF(io_cd = 'I',block_count,0) AS block_count_i,
			IF(io_cd = 'O', block_count,0) AS block_count_o
		FROM
			<include refid="fromStatics"/>
		WHERE
			write_time BETWEEN #startDate# AND #endDate#
			) a  group by write_time with rollup
			)  b order by write_time DESC
	</select>
</sqlMap>