<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
	PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="MonitorStatics">

	<typeAlias alias="statics" type="kr.co.s3i.sr1.monitor.model.MonitorStatics" />

	<sql id="concatDate">
		concat(substring(DATE_FORMAT(statics_time, '%Y%m%d%H%i'),1, 11),'000') AS write_time,
	</sql>
	
	<sql id="concat_DayMonth">
		<isEqual property="date_flag" compareValue="D">
			concat(SUBSTRING(write_time, 1, 8), '000000') AS write_time,
		</isEqual>
		<isEqual property="date_flag" compareValue="M">
			concat(SUBSTRING(write_time,1, 6), '00000000') AS write_time,
		</isEqual>
	</sql>
	
	
	<sql id="fromStatics">
		<isEqual compareValue="H">
			m_statics_hour
		</isEqual>
		<isEqual compareValue="D">
			m_statics_day
		</isEqual>
		<isEqual compareValue="M">
			m_statics_month
		</isEqual>
	</sql>
	
	<select id="selectStaticsDayMonth" resultClass="statics">		
		SELECT 
		    write_time,
		    io_cd,
		    users_id,
		    SUM(send_success_count) AS send_success_count,
		    SUM(send_fail_count) AS send_fail_count,
		    SUM(login_cnt) AS login_cnt,
		    SUM(send_size) AS send_size,
		    SUM(filter_count) AS filter_count,
		    SUM(forgery_count) AS forgery_count,
		    SUM(protect_count) AS protect_count,
		    SUM(suspicious_count) AS suspicious_count,
		    SUM(Infected_count) AS Infected_count,
		    SUM(scan_fail_count) AS scan_fail_count
		FROM
		    (SELECT 
		        	<include refid="concat_DayMonth"/> 
		            io_cd,
		            users_id,
		            send_success_count,
		            send_fail_count,
		            login_cnt,
		            send_size,
		            filter_count,
		            forgery_count,
		            protect_count,
		            suspicious_count,
		            Infected_count,
		            scan_fail_count
		    FROM
		        <isEqual property="date_flag" compareValue="D">
					m_statics_hour
				</isEqual>
				<isEqual property="date_flag" compareValue="M">
					m_statics_day
				</isEqual>
		    WHERE
		        write_time BETWEEN #start_date# and #end_date#) AS a
		GROUP BY write_time , io_cd , users_id
	</select>
	
	<select id="selectStatics" resultClass="statics">		
		SELECT 
		    write_time,
		    io_cd,
		    users_id,
		    SUM(send_success_count) AS send_success_count,
		    SUM(send_fail_count) AS send_fail_count,
		    SUM(login_cnt) AS login_cnt,
		    SUM(send_size) AS send_size,
		    SUM(filter_count) AS filter_count,
		    SUM(forgery_count) AS forgery_count,
		    SUM(protect_count) AS protect_count,
		    SUM(suspicious_count) AS suspicious_count,
		    SUM(Infected_count) AS Infected_count,
		    SUM(scan_fail_count) AS scan_fail_count
		FROM
		    (SELECT 
		        	<include refid="concatDate"/> 
		            'I' AS io_cd,
		            users_id,
		            IF(status = 'SS', 1, 0) AS send_success_count,
		            IF(status = 'F', 1, 0) AS send_fail_count,
		            0 AS login_cnt,
		            0 AS send_size,
		            0 AS filter_count,
		            0 AS forgery_count,
		            0 AS protect_count,
		            0 AS suspicious_count,
		            0 AS Infected_count,
		            0 AS scan_fail_count
		    FROM
		        in_data
		    WHERE
		        statics_time BETWEEN #start_date# and #end_date#
		   	UNION ALL 
		   	SELECT 
		       		concat(substring(DATE_FORMAT(l.crt_date, '%Y%m%d%H%i'),1, 11),'000') AS write_time,
		            l.np_cd AS io_cd,
		            l.users_id,
		            0 AS send_success_count,
		            0 AS send_fail_count,
		            COUNT(l.seq) AS login_cnt,
		            0 AS send_size,
		            0 AS filter_count,
		            0 AS forgery_count,
		            0 AS protect_count,
		            0 AS suspicious_count,
		            0 AS Infected_count,
		            0 AS scan_fail_count
		    FROM
		        login_audit l, c_user_mgt u
		    WHERE
		        l.crt_date BETWEEN #start_date# and #end_date#
		            AND l.login_yn = 'Y'
		            AND l.users_id = u.users_id
		            AND u.rst_seq = 0
		    GROUP BY write_time , l.np_cd , l.users_id 
		    UNION ALL 
		    SELECT 
		        	<include refid="concatDate"/> 
		            'I' AS io_cd,
		            users_id,
		            0 AS send_success_count,
		            0 AS send_fail_count,
		            0 AS login_cnt,
		            IF(vc_status = 1, file_size, 0) AS send_size,
		            IF(vc_status = 12, 1, 0) AS filter_count,
		            IF(vc_status = 11, 1, 0) AS forgery_count,
		            IF(vc_status = 10, 1, 0) AS protect_count,
		            IF(vc_status = 4, 1, 0) AS suspicious_count,
		            IF(vc_status = 3, 1, 0) AS Infected_count,
		            IF(vc_status = 0, 1, 0) AS scan_fail_count
		    FROM
		        in_ath_file
		    WHERE
		        statics_time BETWEEN #start_date# and #end_date#
		    UNION ALL 
		    SELECT 
		       		<include refid="concatDate"/> 
		            'O' AS io_cd,
		            users_id,
		            IF(status = 'SS', 1, 0) AS send_success_count,
		            IF(status = 'F', 1, 0) AS send_fail_count,
		            0 AS login_cnt,
		            0 AS send_size,
		            0 AS filter_count,
		            0 AS forgery_count,
		            0 AS protect_count,
		            0 AS suspicious_count,
		            0 AS Infected_count,
		            0 AS scan_fail_count
		    FROM
		        out_data
		    WHERE
		        statics_time BETWEEN #start_date# and #end_date#
		    UNION ALL 
		    SELECT 
		        	<include refid="concatDate"/> 
		            'O' AS io_cd,
		            users_id,
		            0 AS send_success_count,
		            0 AS send_fail_count,
		            0 AS login_cnt,
		            IF(vc_status = 1, file_size, 0) AS send_size,
		            IF(vc_status = 12, 1, 0) AS filter_count,
		            IF(vc_status = 11, 1, 0) AS forgery_count,
		            IF(vc_status = 10, 1, 0) AS protect_count,
		            IF(vc_status = 4, 1, 0) AS suspicious_count,
		            IF(vc_status = 3, 1, 0) AS Infected_count,
		            IF(vc_status = 0, 1, 0) AS scan_fail_count
		    FROM
		        out_ath_file
		    WHERE
		        statics_time BETWEEN #start_date# and #end_date#) AS a
		GROUP BY write_time , io_cd , users_id
	</select>
	
	<insert id="insertStaticsHour">
		INSERT INTO m_statics_hour (write_time, users_id, io_cd, send_success_count, send_fail_count, login_cnt, send_size, filter_count, forgery_count, protect_count, suspicious_count, Infected_count, scan_fail_count) 
		VALUES	(#write_time#, #users_id#, #io_cd#, $send_success_count$, $send_fail_count$, $login_cnt$, $send_size$, $filter_count$, $forgery_count$, $protect_count$, $suspicious_count$, $Infected_count$, $scan_fail_count$)
	</insert>
	
	<insert id="insertStaticsDay">		
		INSERT INTO m_statics_day (write_time, users_id, io_cd, send_success_count, send_fail_count, login_cnt, send_size, filter_count, forgery_count, protect_count, suspicious_count, Infected_count, scan_fail_count) 
		VALUES	(#write_time#, #users_id#, #io_cd#, $send_success_count$, $send_fail_count$, $login_cnt$, $send_size$, $filter_count$, $forgery_count$, $protect_count$, $suspicious_count$, $Infected_count$, $scan_fail_count$)
	</insert>
	
	<insert id="insertStaticsMonth">
		INSERT INTO m_statics_month (write_time, users_id, io_cd, send_success_count, send_fail_count, login_cnt, send_size, filter_count, forgery_count, protect_count, suspicious_count, Infected_count, scan_fail_count) 
		VALUES	(#write_time#, #users_id#, #io_cd#, $send_success_count$, $send_fail_count$, $login_cnt$, $send_size$, $filter_count$, $forgery_count$, $protect_count$, $suspicious_count$, $Infected_count$, $scan_fail_count$)
	</insert>

	<select id="selectlastWriteTime"  resultClass="String">
		select write_time from <include refid="fromStatics"/>  order by write_time DESC limit 1
	</select>
</sqlMap>
